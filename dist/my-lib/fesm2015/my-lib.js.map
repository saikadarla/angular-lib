{"version":3,"file":"my-lib.js","sources":["../../../projects/my-lib/src/lib/my-lib.service.ts","../../../projects/my-lib/src/lib/my-lib.component.ts","../../../projects/my-lib/src/lib/my-lib.module.ts","../../../projects/my-lib/src/public-api.ts","../../../projects/my-lib/src/my-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { filter } from 'rxjs/operators';\nimport { AppStateInterface, FrameWorkList } from 'projects/my-lib/src/modals/list.modal';\n// import { GetListService } from '../services/get-list.service';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { ActivatedRoute } from '@angular/router';\nimport * as ListActions from 'projects/my-lib/src/store/action';\nimport { select, Store } from '@ngrx/store';\nimport { errorSelector, isLoadingSelector, listSelector } from 'projects/my-lib/src/store/selectors';\n\n@Component({\n  selector: 'lib-my-lib',\n  template: `\n   <ng-container *ngIf=\"isLoading$ | async as Loading\">\n\t<mat-spinner *ngIf=\"Loading\"></mat-spinner>\n</ng-container>\n<form [formGroup]=\"profileForm\" class=\"form-container\" >\t\n\t<fieldset class=\"container\" role=\"radiogroup\">\n\t\t<mat-radio-group\n\t\t  aria-label=\"Select an option\"\n\t\t  formControlName=\"technology\"\n\t\t  class=\"radio-group\"\n\t\t  aria-labelledby=\"radio-group-label\"\n\t\t  tabIndex=\"-1\"\n\t\t  required\n\t\t>\n\t\t  <mat-radio-button\n\t\t\t*ngFor=\"let frameWork of technologyList$ | async; let i = index\"\n\t\t\tvalue=\"{{ frameWork.name }}\"\n\t\t\t[ngClass]=\"frameWork.name === selectedValue ? 'light-grey-bg' : 'green'\"\n\t\t\tclass=\"radio-button\"\n\t\t\t(click)=\"checked($event, frameWork.name)\"\n\t\t\tngClass=\"\"\n\t\t\trole=\"Radio\"\n\t\t\t(change)=\"radioChange($event, frameWork.name)\"\n\t\t  >\n\t\t\t{{ frameWork.name }}\n\t\t  </mat-radio-button>\n\t\t   <mat-error\n\t\t\t *ngIf=\"profileForm.get('technology')?.invalid\"\n\t\t  >Required</mat-error>\n\t\t  <span class=\"selected-value\"> You Selected: {{ selectedValue }} </span>\n\t\t</mat-radio-group>\n\t\t<input type=\"button\" value=\"submit\" (click)=\"saveForm()\" />\n\t  </fieldset>\n\n</form>\n  `,\n  // styles: [ ''\n  // ],\n  styleUrls: ['./my-lib.component.scss']\n})\nexport class MyLibComponent implements OnInit {\n\n  public selectedValue: string = 'NA';\n  public radBtns: FormGroup;\n\n  profileForm = this.formBuilder.group({\n    technology: ['', [Validators.required]]\n  });\n  isLoading$: Observable<boolean>;\n  error$: Observable<string | null>;\n  technologyList$: Observable<FrameWorkList[]>\n\n  constructor(\n    // private radioService: GetListService,\n    private formBuilder: FormBuilder,\n    private snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private store: Store<AppStateInterface>\n    ) {\n\n      this.isLoading$ = this.store.pipe(select(isLoadingSelector));\n      this.error$ = this.store.pipe(select(errorSelector));\n      this.technologyList$ = this.store.pipe(select(listSelector));\n    }  \n\n  ngOnInit(): void {\n    // this.technologyList$ = this.radioService.getTechnologyList();\n    console.log('hello World: ', this.route);\n    this.store.dispatch(ListActions.getList());\n  }\n\n\n  checked(event: any, val: any) {\n    this.selectedValue = val;\n  }\n\n  radioChange(event: any, val: any) {\n    this.selectedValue = val;\n  }\n\n  saveForm() {\n    if (this.profileForm.valid) { \n      this.snackBar.open('You Have Selected: ' + this.profileForm.value.technology, 'OK', {\n        duration: 3000\n      });\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib.component';\n\nimport { CommonModule } from '@angular/common';\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from \"@ngrx/store\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { reducers } from 'projects/my-lib/src/store/reducers';\nimport { listEffects } from 'projects/my-lib/src/store/effects';\nimport { GetListService } from 'projects/my-lib/src/services/get-list.service';\n\n\n\n\n// @NgModule({\n//   declarations: [\n//     MyLibComponent\n//   ],\n//   imports: [\n//   ],\n//   exports: [\n//     MyLibComponent\n//   ]\n// })\n// export class MyLibModule { }\n\n\n@NgModule ({\n  imports: [CommonModule, StoreModule.forFeature('list', reducers), EffectsModule.forFeature([listEffects]),\n  MatRadioModule,\n  HttpClientModule,\n  MatRadioModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatFormFieldModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  // MyLibModule\n],\n  providers: [\n    {\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\n    useValue: { color: 'warn' },\n},\nGetListService],\n  declarations: [MyLibComponent],\n  exports: [MyLibComponent]\n})\nexport class MyLibModule { }\n","/*\n * Public API Surface of my-lib\n */\n\nexport * from './lib/my-lib.service';\nexport * from './lib/my-lib.component';\nexport * from './lib/my-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}