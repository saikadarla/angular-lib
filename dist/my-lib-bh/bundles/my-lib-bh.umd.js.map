{"version":3,"file":"my-lib-bh.umd.js","sources":["../../../projects/my-lib-bh/src/lib/my-lib-bh.service.ts","../../../projects/my-lib-bh/src/lib/my-lib-bh.component.ts","../../../projects/my-lib-bh/src/lib/my-lib-bh.module.ts","../../../projects/my-lib-bh/src/public-api.ts","../../../projects/my-lib-bh/src/my-lib-bh.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyLibService {\n\n  constructor() { }\n}\n","\timport { Component, OnInit } from '@angular/core';\n\n\timport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\timport { Observable } from 'rxjs/internal/Observable';\n\t// import { AppStateInterface, FrameWorkList } from 'projects/my-lib-bh/src/modals/list.modal';\n\timport { AppStateInterface, FrameWorkList } from 'projects/my-lib-bh/src/lib';\n\t\n\timport { MatSnackBar } from \"@angular/material/snack-bar\";\n\t// import * as ListActions from 'projects/my-lib-bh/src/store/action';\n\timport * as ListActions from 'projects/my-lib-bh/src/lib';\n\timport { select, Store } from '@ngrx/store';\n\t// import { errorSelector, isLoadingSelector, listSelector } from 'projects/my-lib-bh/src/store/selectors';\n\timport { errorSelector, isLoadingSelector, listSelector } from 'projects/my-lib-bh/src/lib';\n\timport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n\t@Component({\n\tselector: 'lib-my-lib-bh',\n\ttemplate: `\n\t<ng-container *ngIf=\"isLoading$ | async as Loading\">\n\t<mat-spinner *ngIf=\"Loading\"></mat-spinner>\n\t</ng-container>\n\t<form [formGroup]=\"profileForm\" class=\"form-container\" >\t\n\t<fieldset class=\"container\" role=\"radiogroup\">\n\t\t<mat-radio-group\n\t\t\taria-label=\"Select an option\"\n\t\t\tformControlName=\"technology\"\n\t\t\tclass=\"radio-group\"\n\t\t\taria-labelledby=\"radio-group-label\"\n\t\t\ttabIndex=\"-1\"\n\t\t\trequired\n\t\t>\n\t\t<mat-radio-button\n\t\t\t*ngFor=\"let frameWork of technologyList$ | async; let i = index\"\n\t\t\tvalue=\"{{ frameWork.name }}\"\n\t\t\t[ngClass]=\"frameWork.name === selectedValue ? 'light-grey-bg' : 'green'\"\n\t\t\tclass=\"radio-button\"\n\t\t\t(click)=\"checked($event, frameWork.name)\"\n\t\t\tngClass=\"\"\n\t\t\taria-live=\"polite\"\n\t\t\taria-atomic=\"true\"\n\t\t\trole=\"Radio\"\n\t\t\t(change)=\"radioChange($event, frameWork.name)\"\n\t\t\t>\n\t\t\t{{ frameWork.name }}\n\t\t</mat-radio-button>\n\t\t<mat-error\n\t\t\t\t*ngIf=\"profileForm.get('technology')?.invalid\"\n\t\t>Required</mat-error>\n\t\t<span class=\"selected-value\"> You Selected: {{ selectedValue }} </span>\n\t\t</mat-radio-group>\n\t\t<input type=\"button\" value=\"submit\" (click)=\"saveForm()\" />\n\t\t</fieldset>\n\t</form>\n\t`,\n\t// styles: [ ''\n\t// ],\n\tstyleUrls: ['./my-lib-bh.component.scss']\n\t})\n\texport class MyLibComponent implements OnInit {\n\n\tpublic selectedValue: string = 'NA';\n\tpublic radBtns: FormGroup;\n\n\tprofileForm = this.formBuilder.group({\n\ttechnology: ['', [Validators.required]]\n\t});\n\tisLoading$: Observable<boolean>;\n\terror$: Observable<string | null>;\n\ttechnologyList$: Observable<FrameWorkList[]>\n\n\tconstructor(\n\tprivate formBuilder: FormBuilder,\n\tprivate snackBar: MatSnackBar,\n\tprivate store: Store<AppStateInterface>,\n\tprivate liveAnnouncer: LiveAnnouncer\n\t) {\n\t\tthis.isLoading$ = this.store.pipe(select(isLoadingSelector));\n\t\tthis.error$ = this.store.pipe(select(errorSelector));\n\t\tthis.technologyList$ = this.store.pipe(select(listSelector));\n\t}  \n\n\tngOnInit(): void {\n\tconst t = this.liveAnnouncer.announce('list is displayed').then((a) => console.log('inside: ', a));\n\tthis.store.dispatch(ListActions.getList());\n\t}\n\n\tchecked(event: any, val: any) {\n\tthis.selectedValue = val;\n\t}\n\n\tradioChange(event: any, val: any) {\n\tthis.selectedValue = val;\n\t}\n\n\tsaveForm() {\n\tif (this.profileForm.valid) { \n\t\tthis.snackBar.open('You Have Selected: ' + this.profileForm.value.technology, 'OK', {\n\t\tduration: 3000\n\t\t});\n\t}\n\t}\n\t}\n","import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib-bh.component';\n\nimport { CommonModule } from '@angular/common';\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from \"@ngrx/store\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n// import { reducers } from 'projects/my-lib-bh/src/store/reducers';\nimport { reducers } from 'projects/my-lib-bh/src/lib';\n// import { listEffects } from 'projects/my-lib-bh/src/store/effects';\nimport { listEffects } from 'projects/my-lib-bh/src/lib';\n// import { GetListService } from 'projects/my-lib-bh/src/services/get-list.service';\nimport { GetListService } from 'projects/my-lib-bh/src/lib';\nimport {A11yModule} from '@angular/cdk/a11y'\n\n\n\n\n// @NgModule({\n//   declarations: [\n//     MyLibComponent\n//   ],\n//   imports: [\n//   ],\n//   exports: [\n//     MyLibComponent\n//   ]\n// })\n// export class MyLibModule { }\n\n@NgModule ({\n  imports: [CommonModule, StoreModule.forFeature('list', reducers), EffectsModule.forFeature([listEffects]),\n  MatRadioModule,\n  HttpClientModule,\n  MatRadioModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatFormFieldModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  A11yModule\n  // MyLibModule\n],\n  providers: [\n    {\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\n    useValue: { color: 'warn' },\n},\nGetListService],\n  declarations: [MyLibComponent],\n  exports: [MyLibComponent]\n})\nexport class MyLibModule { }\n","/*\n * Public API Surface of my-lib-bh\n */\n\nexport * from './lib/my-lib-bh.service';\nexport * from './lib/my-lib-bh.component';\nexport * from './lib/my-lib-bh.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","Validators","select","isLoadingSelector","errorSelector","listSelector","ListActions","i1","i2","i3","i4","i5","i6","i7","i8","Component","CommonModule","MatRadioModule","HttpClientModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatSnackBarModule","MatProgressSpinnerModule","A11yModule","MAT_RADIO_DEFAULT_OPTIONS","GetListService","StoreModule","reducers","EffectsModule","listEffects","NgModule"],"mappings":"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"}