{"version":3,"file":"my-lib-bh.js","sources":["../../../projects/my-lib-bh/src/lib/my-lib-bh.service.ts","../../../projects/my-lib-bh/src/lib/my-lib-bh.component.ts","../../../projects/my-lib-bh/src/lib/my-lib-bh.module.ts","../../../projects/my-lib-bh/src/public-api.ts","../../../projects/my-lib-bh/src/my-lib-bh.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyLibService {\n\n  constructor() { }\n}\n","\timport { Component, OnInit } from '@angular/core';\n\n\timport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\timport { Observable } from 'rxjs/internal/Observable';\n\t// import { AppStateInterface, FrameWorkList } from 'projects/my-lib-bh/src/modals/list.modal';\n\timport { AppStateInterface, FrameWorkList } from 'projects/my-lib-bh/src/lib';\n\t\n\timport { MatSnackBar } from \"@angular/material/snack-bar\";\n\t// import * as ListActions from 'projects/my-lib-bh/src/store/action';\n\timport * as ListActions from 'projects/my-lib-bh/src/lib';\n\timport { select, Store } from '@ngrx/store';\n\t// import { errorSelector, isLoadingSelector, listSelector } from 'projects/my-lib-bh/src/store/selectors';\n\timport { errorSelector, isLoadingSelector, listSelector } from 'projects/my-lib-bh/src/lib';\n\timport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n\t@Component({\n\tselector: 'lib-my-lib-bh',\n\ttemplate: `\n\t<ng-container *ngIf=\"isLoading$ | async as Loading\">\n\t<mat-spinner *ngIf=\"Loading\"></mat-spinner>\n\t</ng-container>\n\t<form [formGroup]=\"profileForm\" class=\"form-container\" >\t\n\t<fieldset class=\"container\" role=\"radiogroup\">\n\t\t<mat-radio-group\n\t\t\taria-label=\"Select an option\"\n\t\t\tformControlName=\"technology\"\n\t\t\tclass=\"radio-group\"\n\t\t\taria-labelledby=\"radio-group-label\"\n\t\t\ttabIndex=\"-1\"\n\t\t\trequired\n\t\t>\n\t\t<mat-radio-button\n\t\t\t*ngFor=\"let frameWork of technologyList$ | async; let i = index\"\n\t\t\tvalue=\"{{ frameWork.name }}\"\n\t\t\t[ngClass]=\"frameWork.name === selectedValue ? 'light-grey-bg' : 'green'\"\n\t\t\tclass=\"radio-button\"\n\t\t\t(click)=\"checked($event, frameWork.name)\"\n\t\t\tngClass=\"\"\n\t\t\taria-live=\"polite\"\n\t\t\taria-atomic=\"true\"\n\t\t\trole=\"Radio\"\n\t\t\t(change)=\"radioChange($event, frameWork.name)\"\n\t\t\t>\n\t\t\t{{ frameWork.name }}\n\t\t</mat-radio-button>\n\t\t<mat-error\n\t\t\t\t*ngIf=\"profileForm.get('technology')?.invalid\"\n\t\t>Required</mat-error>\n\t\t<span class=\"selected-value\"> You Selected: {{ selectedValue }} </span>\n\t\t</mat-radio-group>\n\t\t<input type=\"button\" value=\"submit\" (click)=\"saveForm()\" />\n\t\t</fieldset>\n\t</form>\n\t`,\n\t// styles: [ ''\n\t// ],\n\tstyleUrls: ['./my-lib-bh.component.scss']\n\t})\n\texport class MyLibComponent implements OnInit {\n\n\tpublic selectedValue: string = 'NA';\n\tpublic radBtns: FormGroup;\n\n\tprofileForm = this.formBuilder.group({\n\ttechnology: ['', [Validators.required]]\n\t});\n\tisLoading$: Observable<boolean>;\n\terror$: Observable<string | null>;\n\ttechnologyList$: Observable<FrameWorkList[]>\n\n\tconstructor(\n\tprivate formBuilder: FormBuilder,\n\tprivate snackBar: MatSnackBar,\n\tprivate store: Store<AppStateInterface>,\n\tprivate liveAnnouncer: LiveAnnouncer\n\t) {\n\t\tthis.isLoading$ = this.store.pipe(select(isLoadingSelector));\n\t\tthis.error$ = this.store.pipe(select(errorSelector));\n\t\tthis.technologyList$ = this.store.pipe(select(listSelector));\n\t}  \n\n\tngOnInit(): void {\n\tconst t = this.liveAnnouncer.announce('list is displayed').then((a) => console.log('inside: ', a));\n\tthis.store.dispatch(ListActions.getList());\n\t}\n\n\tchecked(event: any, val: any) {\n\tthis.selectedValue = val;\n\t}\n\n\tradioChange(event: any, val: any) {\n\tthis.selectedValue = val;\n\t}\n\n\tsaveForm() {\n\tif (this.profileForm.valid) { \n\t\tthis.snackBar.open('You Have Selected: ' + this.profileForm.value.technology, 'OK', {\n\t\tduration: 3000\n\t\t});\n\t}\n\t}\n\t}\n","import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib-bh.component';\n\nimport { CommonModule } from '@angular/common';\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from \"@ngrx/store\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n// import { reducers } from 'projects/my-lib-bh/src/store/reducers';\nimport { reducers } from 'projects/my-lib-bh/src/lib';\n// import { listEffects } from 'projects/my-lib-bh/src/store/effects';\nimport { listEffects } from 'projects/my-lib-bh/src/lib';\n// import { GetListService } from 'projects/my-lib-bh/src/services/get-list.service';\nimport { GetListService } from 'projects/my-lib-bh/src/lib';\nimport {A11yModule} from '@angular/cdk/a11y'\n\n\n\n\n// @NgModule({\n//   declarations: [\n//     MyLibComponent\n//   ],\n//   imports: [\n//   ],\n//   exports: [\n//     MyLibComponent\n//   ]\n// })\n// export class MyLibModule { }\n\n@NgModule ({\n  imports: [CommonModule, StoreModule.forFeature('list', reducers), EffectsModule.forFeature([listEffects]),\n  MatRadioModule,\n  HttpClientModule,\n  MatRadioModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatFormFieldModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  A11yModule\n  // MyLibModule\n],\n  providers: [\n    {\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\n    useValue: { color: 'warn' },\n},\nGetListService],\n  declarations: [MyLibComponent],\n  exports: [MyLibComponent]\n})\nexport class MyLibModule { }\n","/*\n * Public API Surface of my-lib-bh\n */\n\nexport * from './lib/my-lib-bh.service';\nexport * from './lib/my-lib-bh.component';\nexport * from './lib/my-lib-bh.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}